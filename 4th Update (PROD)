Cypress.on('uncaught:exception', (err, runnable) => {
  return false;
});

describe('Replacement Matrix test', () => {
  const CATALOG_LABEL = 'Mexico Product Catalog : Staged';
  const PROD_URL = 'https://backoffice.iqos.com/backoffice/login.zul';
  const PreProd_URL = 'https://backoffice.pp.iqos.com/backoffice/login.zul';

  beforeEach(() => {
      cy.visit('https://backoffice.iqos.com/backoffice/login.zul', { failOnStatusCode: false, timeout: 30000 }).then(() => {
          cy.log('Visited the URL successfully');
      }).wait(1000);
  });

  it('should test the replacement matrix', () => {
      cy.get('div.singlesignon_login_cell')
          .contains('Login with Single Sign On')
          .should('exist')
          .click({ force: true })
          .wait(20000);

      cy.origin('https://login.microsoftonline.com', () => {
          cy.get('#i0116.form-control.ltr_override.input.ext-input.text-box.ext-text-box', { timeout: 10000 })
              .should('have.attr', 'placeholder', 'Email address, phone number or Skype')
              .type("ADD USERNAME HERE")
              .wait(1000);
          cy.get('.win-button.button_primary.high-contrast-overrides.button.ext-button.primary.ext-primary')
              .contains('Next')
              .should('exist')
              .click({ force: true })
              .wait(5000);
          cy.get('#i0118.form-control.input.ext-input.text-box.ext-text-box', { timeout: 10000 })
              .should('exist')
              .type("ADD PASSWORD HERE")
              .wait(1000);
          cy.get('input#idSIButton9.win-button.button_primary.high-contrast-overrides.button.ext-button.primary.ext-primary')
              .should('exist')
              .click({ force: true })
              .wait(30000);
      });
      //Select a role
      cy.get('.z-listcell-content')
          .contains('PMI Global DCE2 Market Catalog Publisher')
          .should('exist')
          .click({ force: true })
          .wait(2000);
      cy.get('.z-listcell-content')
          .contains('PMI Global DCE2 Market Catalog Publisher')
          .should('exist')
          .click({ force: true })
          .wait(2000);

      cy.get('.yw-selector-btn').click({ force: true }).wait(20000);
      cy.get('span.z-label').contains("Products").click().wait(300);

      const LABELS = {
          L1: 'CAN_BE_REPLACED_BY ->',
          L2: 'CAN_BE_REPLACED_BY_2L ->',
          L3: 'CAN_BE_REPLACED_BY_3L ->'
      };

      const checkProductOnPage = (CATALOG_LABEL, retries = 0) => {
      const maxRetries = 5; // Adjust this based on the maximum number of pages you expect

      // Try to find the product on the current page
      return cy.get('span.yw-coll-browser-hyperlink', { timeout: 10000 }).then(links => {
          const productElement = links.filter((index, element) => {
              return Cypress.$(element).text().includes(CATALOG_LABEL);
          });

          if (productElement.length) {
              // If the product element is found
              return cy.wrap(productElement).scrollIntoView().should('be.visible').click({ force: true });
          } else if (retries < maxRetries) {
              // If the product element is not found and we haven't exceeded max retries
              return cy.get('body').then(body => {
                  if (body.find('.z-paging-icon.z-icon-angle-right').length > 0) {
                      // Click on the pagination button and wait for the page to update
                      return cy.get('.z-paging-icon.z-icon-angle-right').eq(0).click({ force: true })
                          .wait(5000) // Adjust wait time as needed
                          .then(() => checkProductOnPage(CATALOG_LABEL, retries + 1)); // Recurse with increased retry count
                  } else {
                      throw new Error('Reached the last page and product not found');
                  }
              });
          } else {
              throw new Error('Product not found after maximum retries');
          }
      });
  };

  const checkProductReplacements = (productCode, replacements, isFirstSearch) => {
      cy.get('.yw-fulltextsearch-search-button').eq(0).click();

      // Determine the correct input element to type into based on whether it's the first search
      const inputIndex = isFirstSearch ? 3 : 5;
      cy.get('.z-bandbox-input').eq(inputIndex).type(productCode, { force: true }).wait(300);

      cy.get('.yw-fulltextsearch-search-button').eq(0).click().wait(3000);

      return checkProductOnPage(CATALOG_LABEL).then(() => {
          cy.wait(5000);
          cy.get('.yw-editorarea-tabbox-tabs-tab').contains("Categories").click().wait(300);

          // Use cy.then to properly chain the commands
          cy.then(() => {
              replacements.forEach(replacement => {
                  const label = LABELS[replacement.level];
                  cy.get('.z-listitem')
                      .contains(replacement.code)
                      .should('contain', label)
                      .parent()
                      .should('contain', CATALOG_LABEL);
              });

              cy.get('.yw-navigationhistory-back').eq(0).should('be.visible').click({ force: true });
              cy.get('button[title="Clear"]').eq(0).click().wait(1000);
          });
      });
  };


      checkProductReplacements("G0000605", [
        { code: "G0000605", level: 'L1' },
        { code: "G0000604", level: 'L1' },
        { code: "G0000606", level: 'L1' },
        { code: "G0000602", level: 'L3' },
        { code: "G0000592", level: 'L2' }
      ], true);
checkProductReplacements("G0000604", [
        { code: "G0000604", level: 'L1' },
        { code: "G0000592", level: 'L2' },
        { code: "G0000600", level: 'L3' }
      ], false);

  });
});
